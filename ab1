
<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet"
	href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<script
	src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script
	src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<script src="amazon-connect-1.3.js"></script>

<style>
body {
	font-family: Arial, Helvetica, sans-serif;
}

.container {
	margin-left: 0px;
	margin-right: 0px;
	width: 100%;
}

.row {
	display: flex;
	width: 100%;
}

.col-lg-4, .col-lg-8 {
	flex: 1;
	padding: 1em;
	border: 1px solid red;
}

.topnav {
	overflow: hidden;
	background-color: #14366E;
}

#grey {
	padding-left: 12px;
	padding-top: 10px;
	background-color: lightgrey;
}

#AcceptCall {
	background-color: MediumSeaGreen;
	font-weight: bold;
}

#RejectCall {
	background-color: Tomato;
	font-weight: bold;
}

#AgentState {
	margin-left: auto;
	margin-right: auto;
	padding-left: 20px;
	padding-right: 20px;
	padding-bottom: 10px;
	padding-top: 10px;
	background-color: #FFFF99;
}

.toolbarText {
	font-family: "Courier New"
}

.topnav a {
	float: left;
	color: #f2f2f2;
	text-align: center;
	padding: 14px 16px;
	text-decoration: none;
	font-size: 17px;
}

.footer {
	position: fixed;
	left: 0;
	bottom: 0;
	height: 50px;
	width: 100%;
	padding-top: 15px;
	background-color: #14366E;
	color: white;
	text-align: center;
}

.topnav a:hover {
	background-color: #ddd;
	color: black;
}

#customer {
	background-color: #ADD8E6;
	/*margin-top: 20px;*/
	text-align: top;
	vertical-align: middle;
	line-height: 120px;
	font-size: 30px;
}

#close {
	padding-top: 5px;
	background-color: lightgrey;
	padding-bottom: 5px;
}

#ccpContainer {
	width: 320px;
	height: 465px;
	overflow: hidden;
	float: left;
	margin-left: 22px;
	padding: 25px;
}
</style>
<script src="https://code.jquery.com/jquery-3.1.0.min.js"></script>

</head>
<body>

	<div class="topnav">
		<a class="active" href="#Customers">Customers</a> <a href="#Tools">Tools</a>
		<a href="#Desktops">Desktops</a> <a href="#Windows">Windows</a>
	</div>

	<div class="container">
		<div class="row">
			<div class=" col-sm-4">

				<div id="AgentState"></div>
				<div id="grey">
					<p class="toolbarText" id="CallType">Call Type:</p>
				
					<p class="toolbarText" id="Service">Service:</p>
					<p class="toolbarText" id="Intent">Intent:</p>
					<div id="close">
						<input id="AcceptCall" type="button" value="Accept"
							onclick="acceptContact()" > <input id="EndCall"
							type="button" value="End Call" onclick="disconnectContact()" style="display:none;float:right">
					</div>
				</div>


			</div>

			<div class="col-sm-8" id="customer">No Customer</div>

		</div>

	</div>
	<!-- <div id="containerDiv"
		style="width: 320px; min-width: 200px; height: 465px; min-height: 400px; display: none;">
		Amazon CCP is hiding in here
	</div>  -->
	<section id="ccpContainer"
		style="width: 320px; min-width: 200px; height: 465px; min-height: 400px; display: none;">
		<script type="text/javascript">
			var container = document.getElementById("ccpContainer");
			window.myCPP = window.myCPP || {};

			connect.core
					.initCCP(
							container,
							{
								ccpUrl : 'https://telephonycustomccp.awsapps.com/connect/ccp#/',
								softphone : {
									allowFramedSoftphone : true,
									disableRingtone : false
								}
							})

			connect.contact(contactEvents);
			connect.agent(agentEvents);

			function agentEvents(agent) {
				alert(agent.getState().name);
				window.myCPP.agent = agent;
				agent.onRefresh(agentOnRefreshEvents);

			}
			function contactEvents(contact) {
				alert(contact.getContactId());
				window.myCPP.contact = contact;
				console.log(JSON.stringify(contact.getAttributes()));
				document.getElementById("Intent").innerHTML = " Intent: "+contact.getAttributes().Intent.value;
				contact.onRefresh(contactRefreshEvents);
			}

			function contactRefreshEvents(contact) {
				contact.onIncoming(function(contact){
					alert("Invoked Incoming method1");
					if (contact) {
						logInfoEvent("[contact.onIncoming] Contact is incoming. Contact state is "
								+ contact.getStatus().type);
						document.getElementbyId("AcceptCall").style.display = "block";
						document.getElementbyId("EndCall").style.display = "none";
					} else {
						logInfoEvent("[contact.onIncoming] Contact is incoming. Null contact passed to event handler");
					}
				});
				contact
						.onAccepted(function(contact) {
							alert("EnteredOnAccepted");
							document.getElementById("AcceptCall").style.display = "none";
							document.getElementById("AgentState").innerHTML = "Connecting";
							document.getElementById("EndCall").style.display = "block";
						});
				contact
						.onConnected(function(contact) {
							alert("EnteredOnconnected");
							alert("Call Type" + contact.getConnections().getType());
							document.getElementById("AcceptCall").style.display = "none";
							document.getElementById("AgentState").innerHTML = "On Call";
							document.getElementById("CallType").innerHTML = "Call Type: "+contact.getConnections().getType();
						});
				
			}

			function agentOnRefreshEvents(agent) {
				
				document.getElementById("AgentState").innerHTML = agent
						.getState().name;
				

			}
			
			function acceptContact() {
				console.log("Clicked accept contact")
				if (window.myCPP.contact) {
					window.myCPP.contact.accept({
						success : function() {
							logMsg("Accepted contact via Streams");
						},
						failure : function() {
							logMsg("Failed to accept contact via Streams");

						}

					});
				}
			}

			function disconnectContact() {
			  console.log("Clicked disconnect contact")
			  if(confirm("Are you sure you want to end the call?") == true ){
			    if(window.myCPP.contact){
			      window.myCPP.contact.getAgentConnection().destroy({
			        success: function () {
			          logMsg("Disconnected contact via streams");			             
			    },
			        failure: function () {
			          logMsg("Failed to disconnect contact via Streams");
			        }
			  });
			    }
			  }
			} 
		</script>
	</section>

	<div class="footer">
		<p>Copyright Â© 2019</p>
	</div>


</body>
</html>

